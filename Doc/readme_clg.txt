20080621-2153:本程序有一个输入参数，即带后缀名（fli或stl）的几何
模型文件名。

20080128-2201:
v0.2: 复合曲面网格生成基本成功，网格质量良好。存在的问题及其改进思路如下。
1、同前，程序时空效率问题没有改进。
2、一些例子仍然存在问题，待进一步调试改进。
3、通过修改算法，某些情形下网格质量可有进一步提升。

20080110-2020:
v0.1: 单个面片的网格生成基本成功，解决了前面出现的问题，网格质量合理良
好。存在的问题及其改进思路如下。
1、程序时空效率问题，跟PSUE的AFT方法的详细比较及其改进方法。就效率而言，
大体上讲，AFT方法中已经生成的网格不再计算处理，即没有冗余重复计算，但
其节点和单元是逐个生成；而SurfaceMesher中的DT方法生成网格时从粗到细，是
一个细化（当然也可加上粗化成为一个标准的remesh过程）的过程，其节点和
单元成批生成，但已存在的网格边的黎曼长度有重复冗余计算，这个应该可以消
除从而加以改进的。DT的实现方法相对AFT较为简单。
另外两者的内存分配方式也是很不相同的，PSUE采用完全过程式的Fortran语言，
几乎所有的数据结构都采用动态分配的数组形式存储，其时空效率可以说是最高
的，同时还利用了Fortran语言对数组的优化支持；而SurfaceMesher中基本上采
用了面向对象的设计思想，同时利用了STL模板库和OpenMesh库，在程序设计实
践上有所进步，但效率相对欠缺。
2、实现复合曲面网格生成，网格元素的全局编号等实现。

20080110-1112:
找到了畸形单元簇的形成进而使网格生成失败的原因，其原因不在于
网格优化，而在于新插入节点在找到基单元后必定要连接形成新单元，由此形成了
畸形的单元簇。其暂时的解决方法，对于黎曼长度过长的网格边，只先在其中点插
入新节点，由此来避免狭长畸形单元簇的形成。同时参数平面上网格边的黎曼长度
计算方法改正过来了，结果合理！存在的问题及其改进思路如下。
1、上面的解决方法必须加以改进，不然程序的时空效率实在太差，程序有很大的
优化空间。在较长黎曼长度的网格边上只插入中点或少数几个新节点，这个只在开
始时执行少数几次（1～2次）即可了，待形成较为均匀的网格时，可按原来的方法
将所有计算得到的待插新节点都插入，能够使网格生成收敛到最终合理结果即可。
这一步还是非常必要的，就算网格生成过程本来就收敛的，但若没有这一步，可能
会形成狭长的单元尺寸偏小的局部网格。
但新节点不要按传统DT方法在三角形单元中心产生，初始网格不要按传统DT方法
得到，不然会有很多尺寸偏小的单元生成，这样后面就成了真正的remesh过程即
粗化细化都变成是必须的了。
2、接上，由于网格优化操作，在某些少数局部区域的网格还是可能偏细，可考虑
在最后的优化操作中执行一次粗化（edge collapse）操作。
3、对于映射畸变非常严重的情形，如例子xie3中的两个极点附近，由于插入一个
新节点必定会加入几条（2或3）网格边，对这几条网格边甚至几个新产生的网格
单元的合理性需要检查，如新加入的网格边其黎曼长度可能非常小，若这种情况
较为普遍，则可能形成聚集的尺寸严重偏小的单元簇，一如例子xie3中的两个极
点附近的情况。
这个问题不是这样子的，而在于参数平面上网格边的黎曼长度计算方法有误，导致
结果有误！如xie3例子中边界边的黎曼长度为10.26和0.17等等，明显不合理，内部
边的黎曼长度计算同样不合理，导致结果严重失误。这种错误的程度跟映射畸变的
程度情形有关，如STL模型的结果就比较好，因为它是“简单均匀”的线性映射。
有些FLI模型的surface region的网格结果也还可以，因为其映射畸变较小，其他
模型的结果则是错的。
对forming\RingRolling.fli模型，其第一次循环后产生的网格很合理，质量很好，
但后面由于网格边黎曼长度的计算错误，又加入了很多不必要不合理的节点！接下
来修正网格边的黎曼长度计算方法。
参数平面上网格边的黎曼长度计算方法改正过来了，结果合理！
4、复合曲面网格生成，边界节点保持一致，节点全局编号事宜等提上日程。
5、说明：这些问题解决好的话，v0.3可以被删除了。

20080104-1445:
基本实现STL模型和FLI模型的网格生成，存在的问题及其改进思路如下。
1、初始的边界Delaunay网格形态往往较差，有很多狭长的畸形单元，在网格生成过程中，
在这些畸形单元附近可能会形成及其畸形的单元簇，造成最终网格生成失败。
并且有些参数域的边界本来就畸形，如xie3.fli模型（是个半球形）的边界。
改进思路：
通过插入一些内点，先生成一个形态较好的初始DT网格，类似INRIA那两篇连载文章所做。
<<Delaunay mesh generation governed by metric specifications. Part 1 and Part 2>>。
其中的例子，初始Delaunay网格的密度可疏可密，后面通过remesh即粗化细化并和网格优化
交替进行得到最终网格。
2、由于这个版本只有细化插点，没有粗化，则remesh和优化的结果，可能在某些局部区域
的网格过细，甚至有打团的现象产生。
改进思路：
粗化细化一并进行，即通过remesh与网格优化交替进行实现最终的符合密度要求的网格。

20071213-0934: 
基本实现STL网格生成的结果，但存在较大问题，
1、参数化的影响，参数化较差或者相对应的映射畸变较大，会导致初始的边界的Delaunay
网格性态较差，最终的参数网格性态也较差，再加上网格密度较小，则在网格生成过程中
基本上会有很多数值误差产生，导致网格生成失败，或者网格收敛不到最终的理想性态。
改进思路：
1、设置阀值，尽量避免过于畸形单元的生成，但这样可能会使网格生成过程收敛不到
最终的理想性态。
2、修改参数化，使得长度大小相一致，或者更进一步使得长度比例关系保持一致。
也可考虑在初始的边界Delaunay网格基础上，插入一些点形成一个性态较好的但相对
较稀疏的网格，因为初始网格的性态对最终的网格生成过程和结果似乎影响也较大，尤其
是一些特别区域。


20071210-2008: 采用了OpenMesh库，基本实现STL模型一个三角形曲面片的网格生成
代码，但结果不理想，接下来要通过调试找出问题并改进之。

20071128-1100: 采用了梁义特地帮我改写的DTIso2D库，我主要用到其中的边界网格
生成算法，这个和原始Delaunay方法一样。后面的基于Riemmannian度量的DT方法要
重写，这个基本上要用到边的数据结构，目前考虑用OpenMesh库，在下一个版本中实现。

20071029-2200: 完成下列功能：
1、读入stl文件；
2、读入ba3文件；
3、根据指定密度条件离散stl模型边，采用unit mesh的方式。
 